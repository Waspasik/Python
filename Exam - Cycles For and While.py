#На обработку поступает натуральное число. Нужно написать программу, которая выводит на экран сумму чётных цифр этого числа или 0, если чётных цифр в записи нет. Программист торопился и написал программу неправильно.

#Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.

#Примечание. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.

n = int(input())
s = 0
while n > 0:
    if n % 2 == 0:
        s += n % 10
    n //= 10
if s == 0:
    print(s)
else:
    print(s)



#На обработку поступает последовательность из 8 целых чисел. Известно, что вводимые числа по абсолютной величине не превышают 10^12 
#Нужно написать программу, которая выводит на экран количество делящихся нацело на 4 чисел в исходной последовательности и максимальное делящееся
#нацело на 4 число. Если делящихся нацело на 4 чисел нет, требуется на экран вывести «NO». Программист торопился и написал программу неправильно.

#Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.

#Примечание. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.

n = 8
count = 0
maximum = -10**12
for i in range(1, n + 1):
    x = int(input())
    if x % 4 == 0:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')



#На обработку поступает последовательность из 4 целых чисел. Известно, что вводимые числа по абсолютной величине не превышают 10^810 
#8. Нужно написать программу, которая выводит на экран количество нечётных чисел в исходной последовательности и максимальное нечётное число. Если нечётных
#чисел нет, требуется на экран вывести «NO». Программист торопился и написал программу неправильно.

#Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.

#Примечание. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.

n = 4
count = 0
maximum = -10**8
for i in range(1, n + 1):
    x = int(input())
    if x % 2 != 0:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')



#На вход программе подается натуральное число nn. Напишите программу, которая печатает звездную рамку размерами n \times 19n×19.

#Формат входных данных
#На вход программе подаётся натуральное число n ∈ [3;19] — высота звездной рамки.

#Формат выходных данных
#Программа должна вывести звездную рамку размерами n × 19.

#Подсказка. Для печати звездной линии используйте умножение строки на число.

n = int(input())
for i in range(1, n + 1):
    if i == 1:
        print('*' * 19)
    elif 1 < i < n:
        print('*', ' ' * 17, '*', sep='')
    elif i == n:
        print('*' * 19) 



#Дано натуральное число (n > 99). Напишите программу, которая определяет его третью (с начала) цифру.

#Формат входных данных 
#На вход программе подается одно натуральное число, состоящее как минимум из трех цифр.

#Формат выходных данных
#Программа должна вывести его третью (с начала) цифру.

n = int(input())
while n > 1000:
    n //= 10
print(n % 10)



#Дано натуральное число. Напишите программу, которая вычисляет:

#количество цифр 3 в нем;
#сколько раз в нем встречается последняя цифра;
#количество четных цифр;
#сумму его цифр, больших пяти;
#произведение цифр, больших семи (если цифр больших семи нет, то вывести 1, если такая цифра одна, то вывести ее);
#сколько раз в нем встречается цифры 0 и 5 (всего суммарно).
#Формат входных данных 
#На вход программе подается одно натуральное число.

#Формат выходных данных
#Программа должна вывести значения указанных величин в указанном порядке.

n = int(input())
count_digit_3 = 0
last_digit = n % 10
count_last_digit = 0
count_even_digit = 0
sum_numbers_g5 = 0
product_number_7 = 1
count_digit_0_5 = 0

while n > 0:
    if n % 10 == 3:
        count_digit_3 += 1
    if n % 10 == last_digit:
        count_last_digit += 1
    if (n % 10) % 2 == 0:
        count_even_digit += 1
    if n % 10 > 5:
        sum_numbers_g5 += n % 10
    if n % 10 > 7:
        product_number_7 *= n % 10
    if n % 10 == 5:
        count_digit_0_5 += 1
    if n % 10 == 0:
        count_digit_0_5 += 1
    n //= 10

print(count_digit_3, count_last_digit, count_even_digit, sum_numbers_g5, sep='\n')
if product_number_7 == 1:
    print(1)
elif product_number_7 > 7:
    print(product_number_7)
print(count_digit_0_5)