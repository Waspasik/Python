# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют Американские почтовые индексы, удовлетворяющие следующим условиям:

# почтовый индекс начинается с пяти цифр
# далее следует необязательная часть из четырех цифр, которая отделяется от пяти первых
# цифр дефисом

regex = r'(\d{5})(\-\d{4})?'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют Североамериканские номера телефонов, удовлетворяющие следующим
# условиям:

# номер телефона начинается из трехцифрового кода города, который может заключаться в
# круглые скобки
# далее через пробел или дефис следует номер с семью цифрами, разделенный на трехцифровой
# префикс и четырехцифровой номер линии, между которыми указывается дефис

# В номере телефона могут использоваться любые цифры за двумя исключениям: первая цифра
# кода города и первая цифра префикса не могут быть 0 или 1.

regex = r'(([2-9]\d{2})|(\([2-9]\d{2}\)))(\s|\-)[2-9]\d{2}\-\d{4}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности символов, удовлетворяющие следующим условиям:

# последовательность должна состоять только из bee и geek
# последовательность должна содержать хотя бы один geek
# bee не может находиться рядом с самим собой (не может быть beebee)
# eek может появиться только после того, как до этого было записано bee
# после каждого bee когда-нибудь должен появиться geek

regex = r'((bee){1}(geek)+)+'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности символов длины 66, удовлетворяющие следующим
# условиям:

# первый символ — строчная латинская буква
# второй символ — цифра, любая буква в произвольном регистре или символ нижнего подчеркивания
# третий символ — заглавная латинская буква
# четвертый символ должен совпадать с первым символом
# пятый символ должен совпадать со вторым символом
# шестой символ должен совпадать с третьим символом

regex = r'([a-z])(\w)([A-Z])\1\2\3'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют строки, содержащие три или более последовательных повторений ok.

regex = r'(ok){3,}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности символов, представляющие собой девятисимвольные
# палиндромы.

regex = r'(.)(.)(.)(.).\4\3\2\1'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют слова, содержащие повторяющиеся буквы.

regex = r'\b\w*([A-Za-z]+)\w*\1\w*\b'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности из 8 цифр. Причем последовательность может
# содержать символы дефиса - в качестве разделителей, только если они делят ее на группы
# по 2 цифры.

regex = r'\d{2}(-?)\d{2}\1\d{2}\1\d{2}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности из 8 цифр, удовлетворяющие следующим условиям:

# последовательность может содержать символы -, --- или . в качестве разделителей, только
# если они делят ее на группы по 2 цифры
# последовательность должна содержать только один тип разделителя, если он присутствует

regex = r'\d{2}((-|---|\.)?)\d{2}\1\d{2}\1\d{2}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют слова, записанные дважды подряд. Слова могут быть разделены одним
# или несколькими пробелами.

regex = r'(\b\w+\b)[ ]+\b\1\b'