# –§—É–Ω–∫—Ü–∏—è tabulate()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é tabulate(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

# func ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è

# –§—É–Ω–∫—Ü–∏—è tabulate() –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
# –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–∏ func —Å–Ω–∞—á–∞–ª–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º 1, –∑–∞—Ç–µ–º 2, –∑–∞—Ç–µ–º 3, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
# tabulate(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import count


def tabulate(func):
    yield from map(func, count(1))



# –§—É–Ω–∫—Ü–∏—è factorials()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é factorials() —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ accumulate(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
# –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

# n ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ n —á–∏—Å–µ–ª, –∫–∞–∂–¥–æ–µ –∏–∑
# –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–æ–º –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
# factorials(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import accumulate
import operator


def factorials(n):
    yield from accumulate(range(1,n+1), operator.mul)



# –§—É–Ω–∫—Ü–∏—è alnum_sequence()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é alnum_sequence(), –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–µ—Ä–∞—Ç–æ—Ä, —Ü–∏–∫–ª–∏—á–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
# –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –∏ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤:
# 1, A, 2, B, 3, C, .., X, 25, Y, 26, Z

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
# alnum_sequence(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import count, cycle
from string import ascii_uppercase


def alnum_sequence():
    for couple_items in zip(cycle(range(1, len(ascii_uppercase)+1)), cycle(ascii_uppercase)):
        for item in couple_items:
            yield item



# –§—É–Ω–∫—Ü–∏—è roundrobin() üå∂Ô∏è
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é roundrobin(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö
# –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º –æ–±—ä–µ–∫—Ç–æ–º.

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Å–µ—Ö
# –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞,
# –∑–∞—Ç–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤—Ç–æ—Ä–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ; –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç
# –ø–µ—Ä–≤–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –∑–∞—Ç–µ–º –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤—Ç–æ—Ä–æ–≥–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –∏ —Ç–∞–∫
# –¥–∞–ª–µ–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –≠–ª–µ–º–µ–Ω—Ç—ã –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º —Ñ—É–Ω–∫—Ü–∏–µ–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä–µ –¥–æ–ª–∂–Ω—ã
# —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è
# –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
# roundrobin(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import zip_longest


def roundrobin(*args):
    wrapper_args = [[item for item in elem] for elem in args]
    zip_args = zip_longest(*wrapper_args, fillvalue='')
    for elem in zip_args:
        for item in elem:
            if item == '':
                continue
            else:
                yield item



# –§—É–Ω–∫—Ü–∏—è drop_while_negative()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é drop_while_negative(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

# iterable ‚Äî –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è—é—Ç—Å—è —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π –≤—Å–µ —á–∏—Å–ª–∞ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
# iterable, –Ω–∞—á–∏–Ω–∞—è —Å –ø–µ—Ä–≤–æ–≥–æ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –≠–ª–µ–º–µ–Ω—Ç—ã –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º —Ñ—É–Ω–∫—Ü–∏–µ–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä–µ –¥–æ–ª–∂–Ω—ã
# —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é, –Ω–µ
# —è–≤–ª—è–µ—Ç—Å—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º.

# —Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é drop_while_negative(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import dropwhile


def drop_while_negative(iterable):
    return dropwhile(lambda x: x < 0, iterable)



# –§—É–Ω–∫—Ü–∏—è drop_this()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é drop_this(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

# iterable ‚Äî –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç
# obj ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ
# –æ–±—ä–µ–∫—Ç–∞ iterable, –Ω–∞—á–∏–Ω–∞—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞, –Ω–µ —Ä–∞–≤–Ω–æ–≥–æ obj.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –≠–ª–µ–º–µ–Ω—Ç—ã –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º —Ñ—É–Ω–∫—Ü–∏–µ–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä–µ –¥–æ–ª–∂–Ω—ã
# —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è
# –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é drop_this(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import dropwhile


def drop_this(iterable, obj):
    return dropwhile(lambda x: x == obj, iterable)



# –§—É–Ω–∫—Ü–∏—è first_true()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é first_true(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

# iterable ‚Äî –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç
# predicate ‚Äî —Ñ—É–Ω–∫—Ü–∏—è-–ø—Ä–µ–¥–∏–∫–∞—Ç; –µ—Å–ª–∏ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ None, —Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ñ—É–Ω–∫—Ü–∏–∏
# bool()

# –§—É–Ω–∫—Ü–∏—è first_true() –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–µ—Ä–≤—ã–π –ø–æ —Å—á–µ—Ç—É —ç–ª–µ–º–µ–Ω—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
# iterable, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏—è predicate –≤–µ—Ä–Ω—É–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ True. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç,
# —Ñ—É–Ω–∫—Ü–∏—è first_true() –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ None.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–µ–¥–∏–∫–∞—Ç ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –∏–ª–∏ False –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
# –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏—è.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è
# –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é first_true(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import dropwhile

def first_true(iterable, predicate):
    if predicate is None:
        predicate = bool
    return next(dropwhile(lambda elem: not predicate(elem), iterable), None)



# –§—É–Ω–∫—Ü–∏—è take()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é take(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

# iterable ‚Äî –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç
# n ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ –ø–µ—Ä–≤—ã—Ö n —ç–ª–µ–º–µ–Ω—Ç–æ–≤
# –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ iterable.

# —Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –≠–ª–µ–º–µ–Ω—Ç—ã –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º —Ñ—É–Ω–∫—Ü–∏–µ–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä–µ –¥–æ–ª–∂–Ω—ã
# —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è
# –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º.

# —Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é take(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import islice


def take(iterable, n):
    return islice(iterable, n)



# –§—É–Ω–∫—Ü–∏—è take_nth()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é take_nth(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

# iterable ‚Äî –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç
# n ‚Äî –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å n-—ã–π –ø–æ —Å—á–µ—Ç—É —ç–ª–µ–º–µ–Ω—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ iterable. –ï—Å–ª–∏
# –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç iterable —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–Ω–µ–µ n —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
# None.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è
# –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é take_nth(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import islice


def take_nth(iterable, n):
    return next(islice(iterable, n-1, n), None)



# –§—É–Ω–∫—Ü–∏—è first_largest()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é first_largest(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

# terable ‚Äî –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è—é—Ç—Å—è —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞
# number ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ iterable, –∫–æ—Ç–æ—Ä—ã–π
# –±–æ–ª—å—à–µ number. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —á–∏—Å–ª–æ -1.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª 10, 2, 14, 7, 7, 18, 20 –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞. –ü–µ—Ä–≤—ã–º
# —á–∏—Å–ª–æ–º, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∏–º 1, —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ 14, –∫–æ—Ç–æ—Ä–æ–µ –∏–º–µ–µ—Ç –∏–Ω–¥–µ–∫—Å 2.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è
# –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é first_largest(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from itertools import dropwhile


def first_largest(iterable, number):
    return next(dropwhile(lambda x: x[1] < number, enumerate(iterable)), [-1])[0]