# –°–Ω–æ–≤–∞ –Ω–µ —É—Å–ø–µ–ª
# –î–∞–Ω —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞:

# –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫	9:00 - 21:00
# –í—Ç–æ—Ä–Ω–∏–∫	    9:00 - 21:00
# –°—Ä–µ–¥–∞	        9:00 - 21:00
# –ß–µ—Ç–≤–µ—Ä–≥	    9:00 - 21:00
# –ü—è—Ç–Ω–∏—Ü–∞	    9:00 - 21:00
# –°—É–±–±–æ—Ç–∞	    10:00 - 18:00
# –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ	10:00 - 18:00

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—É—â–∏–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç, –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è —Ç–µ–∫—É—â–∏–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY HH:MM.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç, –∫–æ—Ç–æ—Ä–æ–µ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞,
# –∏–ª–∏ —Ç–µ–∫—Å—Ç –ú–∞–≥–∞–∑–∏–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –æ–Ω –∑–∞–∫—Ä—ã—Ç.

from datetime import datetime, timedelta


timetable = {
    1: {'start': timedelta(hours=9), 'end': timedelta(hours=21)},
    2: {'start': timedelta(hours=9), 'end': timedelta(hours=21)},
    3: {'start': timedelta(hours=9), 'end': timedelta(hours=21)},
    4: {'start': timedelta(hours=9), 'end': timedelta(hours=21)},
    5: {'start': timedelta(hours=9), 'end': timedelta(hours=21)},
    6: {'start': timedelta(hours=10), 'end': timedelta(hours=18)},
    7: {'start': timedelta(hours=10), 'end': timedelta(hours=18)}
    }

datetime_input = input().split(' ')
day_of_the_week = datetime.strptime(datetime_input[0], '%d.%m.%Y').isoweekday()
hours, minutes = datetime_input[1].split(':')
tm = timedelta(hours=int(hours), minutes=int(minutes))

if timetable[day_of_the_week]['start'] <= tm < timetable[day_of_the_week]['end']:
    minutes_before_closing = timetable[day_of_the_week]['end'] - tm
    print(minutes_before_closing.seconds // 60)
else:
    print('–ú–∞–≥–∞–∑–∏–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç')



# –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ üòÑ
# –î–∞–Ω —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω—ã –∏—Ö —Ñ–∞–º–∏–ª–∏–∏, –∏–º–µ–Ω–∞ –∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è.
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ –¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤,
# —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö nn —Å—Ç—Ä–æ–∫–∞—Ö –≤–≤–æ–¥—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–∂–¥–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ:
# —Ñ–∞–º–∏–ª–∏—è, –∏–º—è –∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ
# DD.MM.YYYY.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –∏–º—è
# –∏ —Ñ–∞–º–∏–ª–∏—é, —Ä–∞–∑–¥–µ–ª–∏–≤ –ø—Ä–æ–±–µ–ª–æ–º. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏
# –∏—Ö –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ä–∞–∑–¥–µ–ª–∏–≤ –ø—Ä–æ–±–µ–ª–æ–º.

from datetime import datetime

employee_dict = {}
min_birthday = datetime(2020, 1, 1)

for i in range(int(input())):
    employee_info = input().split(' ')
    birthday_employe = datetime.strptime(employee_info[2], '%d.%m.%Y')
    employee_dict[birthday_employe] = employee_dict.get(birthday_employe, []) + [' '.join(employee_info[:2])]

for key, value in employee_dict.items():
    if key < min_birthday:
        min_birthday = key

if len(employee_dict[min_birthday]) > 1:
    print(min(employee_dict).strftime('%d.%m.%Y'), len(employee_dict[min_birthday]))
else:
    print(min(employee_dict).strftime('%d.%m.%Y'), ''.join(employee_dict[min_birthday]))
