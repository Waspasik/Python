# Напишите функцию draw_triangle(), которая выводит звездный равнобедренный треугольник с основанием и высотой равными 1515 и 88 соответственно:

#        *
#       ***
#      *****
#     *******
#    *********
#   ***********
#  *************
# **************
# Примечание 1 . Для вывода треугольника используйте цикл for. 

# Примечание 2 . Справа от звездочек пробелов нет.

def draw_triangle():
    hight = 1
    for i in range(8):
        print((' ' * (8 - 1 - i)), '*' * hight, sep='')
        hight += 2

draw_triangle()



# Интернет магазин осуществляет экспресс доставку для своих товаров по цене 1000 рублей за первый товар и 120 рублей
# за каждый последующий товар. Напишите функцию get_shipping_cost(quantity), которая принимает в качестве аргумента
# натуральное число quantity – количество товаров в заказе и возвращает стоимость доставки.

def get_shipping_cost(quantity):
    if quantity == 1:
        return 1000
    elif quantity > 1:
        return (1000 + ((quantity - 1) * 120))

n = int(input())

print(get_shipping_cost(n))



# Напишите функцию compute_binom(n, k), которая принимает в качестве аргументов два натуральных числа n и k и возвращает значение
# биномиального коэффициента, равного n! / (k!(n-k)!)

from math import*

def compute_binom(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))

n = int(input())
k = int(input())

print(compute_binom(n, k))



# Напишите функцию number_to_words(num), которая принимает в качестве аргумента натуральное число num и возвращает его словесное
# описание на русском языке.

# Примечание 1. Считайте, что число 1 ≤ num ≤ 99.

def number_to_words(num):
    zero_to_ninety_nine = ['ноль', 'один', 'два', 'три', 'четыре', 'пять', 'шесть', 'семь', 'восемь', 'девять', 'десять', 'одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать', 'пятнадцать', 'шестнадцать', 'семнадцать', 'восемнадцать', 'девятнадцать', 'двадцать', 'двадцать один', 'двадцать два', 'двадцать три', 'двадцать четыре', 'двадцать пять', 'двадцать шесть', 'двадцать семь', 'двадцать восемь', 'двадцать девять', 'тридцать', 'тридцать один', 'тридцать два', 'тридцать три', 'тридцать четыре', 'тридцать пять', 'тридцать шесть', 'тридцать семь', 'тридцать восемь', 'тридцать девять', 'сорок', 'сорок один', 'сорок два', 'сорок три', 'сорок четыре', 'сорок пять', 'сорок шесть', 'сорок семь', 'сорок восемь', 'сорок девять', 'пятьдесят', 'пятьдесят один', 'пятьдесят два', 'пятьдесят три', 'пятьдесят четыре', 'пятьдесят пять', 'пятьдесят шесть', 'пятьдесят семь', 'пятьдесят восемь', 'пятьдесят девять', 'шестьдесят', 'шестьдесят один', 'шестьдесят два', 'шестьдесят три', 'шестьдесят четыре', 'шестьдесят пять', 'шестьдесят шесть', 'шестьдесят семь', 'шестьдесят восемь', 'шестьдесят девять', 'семьдесят', 'семьдесят один', 'семьдесят два', 'семьдесят три', 'семьдесят четыре', 'семьдесят пять', 'семьдесят шесть', 'семьдесят семь', 'семьдесят восемь', 'семьдесят девять', 'восемьдесят', 'восемьдесят один', 'восемьдесят два', 'восемьдесят три', 'восемьдесят четыре', 'восемьдесят пять', 'восемьдесят шесть', 'восемьдесят семь', 'восемьдесят восемь', 'восемьдесят девять', 'девяносто', 'девяносто один', 'девяносто два', 'девяносто три', 'девяносто четыре', 'девяносто пять', 'девяносто шесть', 'девяносто семь', 'девяносто восемь', 'девяносто девять']
    return zero_to_ninety_nine[n]

n = int(input())

print(number_to_words(n))



# Напишите функцию get_month(language, number), которая принимает на вход два аргумента language – язык ru или en и
# number – номер месяца (от 1 до 12) и возвращает название месяца на русском или английском языке.

def get_month(language, number):
    lng_ru = ['', 'январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']

    lng_en = ['', 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december']
    
    if language == 'ru':
        return lng_ru[number]
    elif language == 'en':
        return lng_en[number]

lan = input()
num = int(input())

print(get_month(lan, num))



# Магическая дата – это дата, когда день, умноженный на месяц, равен числу образованному последними двумя цифрами года.

# Напишите функцию, is_magic(date) которая принимает в качестве аргумента строковое представление корректой даты и возвращает
# значение True если дата является магической и False в противном случае.

def is_magic(date):
    date = date.split('.')
    decade = int(date[2]) % 100
    if int(date[0]) * int(date[1]) == decade:
        return True
    else:
        return False

date = input()

print(is_magic(date))



# Панграмма – это фраза, содержащая в себе все буквы алфавита. Обычно панграммы используют для презентации шрифтов, чтобы
# можно было в одной фразе рассмотреть все глифы.

# Напишите функцию, is_pangram(text) которая принимает в качестве аргумента строку текста на английском языке и возвращает
# значение True если текст является панграммой и False в противном случае.

# Примечание 1. Гарантируется, что введенная строка содержит только буквы английского алфавита.

def is_pangram(text):
    alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
    counter = 0
    for i in range(26):
        if alphabet[i] in text.lower():
            counter += 1
            continue
        else:
            return False
    if counter == 26:
        return True

text = input()

print(is_pangram(text))