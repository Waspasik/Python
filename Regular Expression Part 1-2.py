# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствует строка beegeek.

regex = r'beegeek'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности формата xxx.xxx, где x — любой символ.

regex = r'...\....'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности цифр, представляющие целые числа от 100 до
# 199 включительно.

regex = r'1\d\d'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют телефонные номера формата xxx-xxx-xxxx, где x — произвольная цифра.

regex = r'\d{3}\-\d{3}\-\d{4}'



# Вам доступно регулярное выражение regex, которому соответствуют строки car, cat и cab.
# Перепишите его с использованием набора символов, чтобы ему соответствовали те же строки.

regex = r'ca[brt]'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют все шестнадцатеричные цифры. Предполагается, что шестнадцатеричные
# цифры образуют множество:
# 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F

regex = r'[0-9A-F]'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности символов формата Xxxxx, где X — любая буква
# латинского алфавита в произвольном регистре, а x — произвольная цифра.

regex = r'[A-Z|a-z][0-9]{4}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности символов длины 55, удовлетворяющие следующим
# условиям:

# первый символ — строчная латинская буква
# второй символ — произвольная цифра
# третий символ — строчная латинская буква
# четвертый символ — заглавная латинская буква
# пятый символ — заглавная латинская буква

regex = r'[a-z][0-9][a-z][A-Z]{2}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности символов длины 66, удовлетворяющие следующим
# условиям:

# первый символ — произвольная цифра
# второй символ — строчная латинская гласная буква (a, e, i, o, u, y)
# третий символ — любой символ, кроме b, c, D, F
# четвертый символ — любой не пробельный символ
# пятый символ — любой символ, кроме заглавной латинской гласной буквы (A, E, I, O, U, Y)
# шестой символ — любой символ, кроме точки и запятой

regex = r'[0-9][aeiouy][^bcDF]\S[^AEIOUY][^.,]'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют последовательности символов длины 66, удовлетворяющие следующим
# условиям:

# первый символ — цифра 1, 2 или 3
# второй символ — цифра 0, 1 или 2
# третий символ — цифра 1, 2 или строчная латинская буква x
# четвертый символ — цифра 0, 3 или латинская буква a в любом регистре
# пятый символ — строчная латинская буква x, s или u
# шестой символ — точка или запятая

regex = r'[1-3][0-2][1-2|x][03|Aa][xsu][.,]'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют телефонные номера следующих форматов:

# +7xxxxxxxxxx
# +7(xxx)xxxxxxx
# +7(xxx)-xxx-xx-xx
# +7 xxx xxx xx xx

# где x — произвольная цифра.

# Примечание 1. Дополнительная проверка телефонного номера на корректность не требуется.

regex = r'\+7\d{10}|\+7\(\d{3}\)\d{7}|\+7\(\d{3}\)\-\d{3}\-\d{2}\-\d{2}|\+7\s\d{3}\s\d{3}\s\d{2}\s\d{2}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют даты следующих форматов:

# DD.MM.YYYY
# DD/MM/YYYY
# YYYY.MM.DD
# YYYY/MM/DD

# Примечание 1. Дополнительная проверка даты на корректность не требуется.

regex = r'\d{2}\.\d{2}\.\d{4}|\d{2}\/\d{2}\/\d{4}|\d{4}\.\d{2}\.\d{2}|\d{4}\/\d{2}\/\d{2}'



# Дополните приведенный ниже код, чтобы переменная regex содержала регулярное выражение,
# которому соответствуют времена формата HH:MM.

# Примечание 1. Требуется дополнительная проверка на корректность, то есть время 54:96
# не должно соответствовать регулярному выражению regex.

regex = r'00\:00|[0-2][0-3]\:[0-5]\d|[0-1]\d\:[0-5]\d'