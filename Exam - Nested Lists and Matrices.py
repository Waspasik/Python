# –ö–∞–∂–¥—ã–π n-—ã–π —ç–ª–µ–º–µ–Ω—Ç
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã –∏ —á–∏—Å–ª–æ nn. –ò–∑ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
# —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–¥–µ–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–æ–¥—Å–ø–∏—Å–∫–∏ —Ç–∞–∫,
# —á—Ç–æ n –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —Ä–∞–∑–Ω—ã–º –ø–æ–¥—Å–ø–∏—Å–∫–∞–º.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã, –æ—Ç–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞ –∏
# —á–∏—Å–ª–æ nn –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.

lst = input().split()
n = int(input())
matrix = []

for i in range(n):
    matrix.append(lst[i::n])

print(matrix)



# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤ –æ–±–ª–∞—Å—Ç–∏ 2
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∑–∞—à—Ç—Ä–∏—Ö–æ–≤–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π
# –º–∞—Ç—Ä–∏—Ü—ã.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º
# —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∑–∞—à—Ç—Ä–∏—Ö–æ–≤–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π
# –º–∞—Ç—Ä–∏—Ü—ã.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ–±–æ—á–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏ —Ç–∞–∫–∂–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è.

n = int(input())
matrix = [input().split() for _ in range(n)]
maximum = 0

for i in range(n):
    for j in range(n):
        if i <= j and i >= n - 1 - j:
            if int(matrix[i][j]) > maximum:
                maximum = int(matrix[i][j])
        elif i >= j and i >= n - 1 - j:
            if int(matrix[i][j]) > maximum:
                maximum = int(matrix[i][j])

print(maximum)



# –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É–µ—Ç –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º
# —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ ‚Äî –º–∞—Ç—Ä–∏—Ü–∞, –ø–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã –∑–∞–º–µ–Ω–æ–π —Å—Ç—Ä–æ–∫
# –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ó–∞–¥–∞—á—É –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.

n = int(input())
matrix = [input().split() for _ in range(n)]
transpon_matrix = []
temp = []

for i in range(n):
    for j in range(n):
        temp.append(matrix[j][i])
    transpon_matrix.append(temp)
    temp = []

[print(*transpon_matrix[l]) for l in range(n)]



# –°–Ω–µ–∂–∏–Ω–∫–∞
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–µ—á–µ—Ç–Ω–æ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç
# –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º n √ó n –∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë —Å–∏–º–≤–æ–ª–∞–º–∏ . . –ó–∞—Ç–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–∏–º–≤–æ–ª–∞–º–∏ * —Å—Ä–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –∏
# —Å—Ç–æ–ª–±–µ—Ü –º–∞—Ç—Ä–∏—Ü—ã, –≥–ª–∞–≤–Ω—É—é –∏ –ø–æ–±–æ—á–Ω—É—é –¥–∏–∞–≥–æ–Ω–∞–ª—å –º–∞—Ç—Ä–∏—Ü—ã. –í—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –Ω–∞ —ç–∫—Ä–∞–Ω,
# —Ä–∞–∑–¥–µ–ª—è—è —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–±–µ–ª–∞–º–∏.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–µ—á–µ—Ç–Ω–æ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n, (n ‚â• 3) ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤
# –≤ –º–∞—Ç—Ä–∏—Ü–µ.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

n = int(input())
matrix = []
temp = []

for i in range(n):
    for j in range(n):
        if i + j == n - 1 or i - j == 0 or i == int(n // 2) or j == int(n // 2):
            temp.append('*')
        else:
            temp.append('.')
    matrix.append(temp)
    temp = []

[print(*matrix[l]) for l in range(n)]



# –°–∏–º–º–µ—Ç—Ä–∏—á–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ—Å—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–æ–±–æ—á–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º
# —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–∞, –∏ —Å–ª–æ–≤–æ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

n = int(input())
matrix = [input().split() for _ in range(n)]

if matrix[0][0] == matrix[-1][-1]:
    print('YES')
else:
    print('NO')



# –õ–∞—Ç–∏–Ω—Å–∫–∏–π –∫–≤–∞–¥—Ä–∞—Ç üå∂Ô∏è
# –õ–∞—Ç–∏–Ω—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞ nn –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–æ–º n √ó n, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∏
# –∫–∞–∂–¥—ã–π —Å—Ç–æ–ª–±–µ—Ü –∫–æ—Ç–æ—Ä–æ–π —Å–æ–¥–µ—Ä–∂–∞—Ç –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ n. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç,
# —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –ª–∞—Ç–∏–Ω—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º
# —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã: nn —Å—Ç—Ä–æ–∫, –ø–æ n —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º, –∏ —Å–ª–æ–≤–æ NO, –µ—Å–ª–∏
# –Ω–µ —è–≤–ª—è–µ—Ç—Å—è.

n = int(input())
matrix = []

for i in range(n):
    temp = [int(num) for num in input().split()]
    matrix.append(temp)

for i in range(n):
    if sorted(matrix[i]) != list(range(1, n + 1)) or sorted([matrix[j][i] for j in range(n)]) != list(range(1, n + 1)):
        print('NO')
        break
    else:
        print('YES')



# –•–æ–¥—ã —Ñ–µ—Ä–∑—è
# –ù–∞ —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–µ 8 √ó 8 —Å—Ç–æ–∏—Ç —Ñ–µ—Ä–∑—å. –û—Ç–º–µ—Ç—å—Ç–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ñ–µ—Ä–∑—è –Ω–∞ –¥–æ—Å–∫–µ –∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—å–µ—Ç
# —Ñ–µ—Ä–∑—å. –ö–ª–µ—Ç–∫—É, –≥–¥–µ —Å—Ç–æ–∏—Ç —Ñ–µ—Ä–∑—å, –æ—Ç–º–µ—Ç—å—Ç–µ –±—É–∫–≤–æ–π Q, –∫–ª–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—å–µ—Ç —Ñ–µ—Ä–∑—å, –æ—Ç–º–µ—Ç—å—Ç–µ —Å–∏–º–≤–æ–ª–∞–º–∏ *,
# –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–æ—á–∫–∞–º–∏.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ñ–µ—Ä–∑—è –Ω–∞ —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–µ –≤ —à–∞—Ö–º–∞—Ç–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ (—Ç–æ –µ—Å—Ç—å –≤ –≤–∏–¥–µ
# e4, –≥–¥–µ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ (–±—É–∫–≤–∞ –æ—Ç a –¥–æ h, —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ), –∑–∞—Ç–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
# (—Ü–∏—Ñ—Ä–∞ –æ—Ç 11 –¥–æ 88, —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö)).

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å–∫–∏, —Ä–∞–∑–¥–µ–ª—è—è —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–±–µ–ª–∞–º–∏.

position, eng_alphabet, numbers = input(), 'abcdefgh', '12345678'
matrix = [['.' for _ in range(8)] for _ in range(8)]
rows, cols = 8 - int(position[1]), eng_alphabet.index(position[0])
matrix[rows][cols] = 'Q'

for i in range(8):
    for j in range(8):
        if i == rows and j != cols:
            matrix[i][j] = '*'
        elif i != rows and j == cols:
            matrix[i][j] = '*'
        elif i - j == rows - cols and i != rows and j != cols:
            matrix[i][j] = '*'
        elif i + j == rows + cols and i != rows and j != cols:
            matrix[i][j] = '*'
        
for r in range(8):
    for c in range(8):
        print(str(matrix[r][c]).ljust(2), end='')
    print()



# –î–∏–∞–≥–æ–Ω–∞–ª–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –≥–ª–∞–≤–Ω–æ–π
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É
# —Ä–∞–∑–º–µ—Ä–æ–º n √ó n –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –µ—ë –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –ø—Ä–∞–≤–∏–ª—É:

# –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏ –Ω–∞ –º–µ—Å—Ç–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å—Ç–æ—è—Ç—å —á–∏—Å–ª–æ 00;
# –Ω–∞ –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª—è—Ö, –ø—Ä–∏–ª–µ–≥–∞—é—â–∏—Ö –∫ –≥–ª–∞–≤–Ω–æ–π, —á–∏—Å–ª–æ 1;
# –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª—è—Ö —á–∏—Å–ª–æ 2, –∏ —Ç.–¥.
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

n = int(input())
matrix = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if i > j  and i <= n - 1 - j or i > j  and i >= n - 1 - j:
            matrix[i][j] = i - j
        if i < j  and i <= n - 1 - j or i < j  and i >= n - 1 - j:
            matrix[i][j] = j - i

[print(*matrix[l]) for l in range(n)]