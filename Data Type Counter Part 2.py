# –í –ø–æ–∏—Å–∫–∞—Ö —Å–ª–æ–≤ üòá
# –î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∏–±–æ–ª–µ–µ
# —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ –≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–π
# –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏—Å–∫–æ–º–æ–µ —Å–ª–æ–≤–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä. –¢–æ –µ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä,
# —Å–ª–æ–≤–∞ Python –∏ python —Å—á–∏—Ç–∞—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏.

from collections import Counter

print(Counter(input().lower().split()).most_common()[0][0])



# –í –ø–æ–∏—Å–∫–∞—Ö —Å–ª–æ–≤ üòã
# –î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∏–º–µ–Ω–µ–µ
# —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ,
# –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –≤—Å–µ.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–º–µ–Ω–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ –≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–π 
# –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ,
# –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –≤—Å–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ,
# —Ä–∞–∑–¥–µ–ª—è—è –∑–∞–ø—è—Ç–æ–π.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä. –¢–æ –µ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä,
# —Å–ª–æ–≤–∞ Python –∏ python —Å—á–∏—Ç–∞—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏.

from collections import Counter

most_common_words = Counter(input().lower().split()).most_common()
sorted_words = sorted(list(filter(lambda x: x[1] == most_common_words[-1][1], most_common_words)))
print(', '.join([word[0] for word in sorted_words]))



# –í –ø–æ–∏—Å–∫–∞—Ö —Å–ª–æ–≤ ü•≥
# –î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ
# –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞
# –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ–ª—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ –≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –∏
# –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏
# —Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ–ª—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏, —Ç–∞–∫ –∂–µ –≤ –Ω–∏–∂–Ω–µ–º –≤ —Ä–µ–≥–∏—Å—Ç—Ä–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä. –¢–æ –µ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ª–æ–≤–∞ Python
# –∏ python —Å—á–∏—Ç–∞—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏.

from collections import Counter

most_common_words = Counter(input().lower().split()).most_common()
sorted_words = sorted(filter(lambda x: x[1] == most_common_words[0][1], most_common_words))
print(max([word[0] for word in sorted_words]))



# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª–∏–Ω —Å–ª–æ–≤
# –î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞ –∏–∑ —ç—Ç–æ–π
# –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ –∏—Ö –¥–ª–∏–Ω–µ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –∫–∞–∂–¥–æ–π –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞ –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ –∏—Ö –¥–ª–∏–Ω–µ –∏
# –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –∫–∞–∂–¥–æ–π –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ. –ö–∞–∂–¥—É—é –≥—Ä—É–ø–ø—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—Ç
# –¥–≤–∞ —á–∏—Å–ª–∞ ‚Äî –¥–ª–∏–Ω–∞ —Å–ª–æ–≤ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è
# –≥—Ä—É–ø–ø—ã {is, to, hi, no} —ç—Ç–æ —á–∏—Å–ª–∞ 2 –∏ 4. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–∂–¥–æ–π
# –≥—Ä—É–ø–ø–µ, —Ä–∞—Å–ø–æ–ª–æ–∂–∏–≤ –∏—Ö –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –≤ –Ω–∏—Ö, –∫–∞–∂–¥—ã–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π
# —Å—Ç—Ä–æ–∫–µ, –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

# –°–ª–æ–≤ –¥–ª–∏–Ω—ã <–¥–ª–∏–Ω–∞ —Å–ª–æ–≤ –≤ –≥—Ä—É–ø–ø–µ>: <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –≥—Ä—É–ø–ø–µ>

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ï—Å–ª–∏ –¥–≤–µ —Ä–∞–∑–Ω—ã–µ –≥—Ä—É–ø–ø—ã –∏–º–µ—é—Ç —Ä–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤, —Ç–æ –ø–µ—Ä–≤–æ–π –¥–æ–ª–∂–Ω–∞
# —Å–ª–µ–¥–æ–≤–∞—Ç—å —Ç–∞ –≥—Ä—É–ø–ø–∞, —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–π –≤ –∏—Å—Ö–æ–¥–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ.

from collections import Counter

len_words = [len(word) for word in input().split()]
count_len_words = Counter(len_words).most_common()
for length, count in sorted(count_len_words, key=lambda x: x[1]):
    print(f'–°–ª–æ–≤ –¥–ª–∏–Ω—ã {length}: {count}')



# –í—Å–µ –µ—â–µ –¥–æ—Å—Ç–æ–∏–Ω
# –î–∞–Ω —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω —É—á–µ–Ω–∏–∫–æ–≤ –∏ –∏—Ö –æ—Ü–µ–Ω–æ–∫ –∑–∞ —ç–∫–∑–∞–º–µ–Ω. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è
# –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Ç–æ—Ä–æ–≥–æ –ø–æ —Å—á–µ—Ç—É —É—á–µ–Ω–∏–∫–∞, –∏–º–µ—é—â–µ–≥–æ —Å–∞–º—É—é –Ω–∏–∑–∫—É—é –æ—Ü–µ–Ω–∫—É.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, –≤ –∫–∞–∂–¥–æ–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö
# –∑–∞–ø–∏—Å–∞–Ω—ã –∏–º—è –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —É—á–µ–Ω–∏–∫–∞ –∏ –µ–≥–æ –æ—Ü–µ–Ω–∫–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—Ç–æ—Ä–æ–≥–æ –ø–æ —Å—á–µ—Ç—É —É—á–µ–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç —Å–∞–º—É—é
# –Ω–∏–∑–∫—É—é –æ—Ü–µ–Ω–∫—É, –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –∏–º—è.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –≤—Å–µ —É—á–µ–Ω–∏–∫–∏ –∏–º–µ—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–º–µ–Ω–∞ –∏ –æ—Ü–µ–Ω–∫–∏.

import sys
from collections import Counter

students_marks = sorted([tuple(student_mark.split()) for student_mark in sys.stdin], key=lambda x: int(x[1]))
print(Counter(students_marks).most_common(2)[-1][0][0])



# –í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è data, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è Counter —Å–ª–æ–≤–∞—Ä—å. –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π
# –Ω–∏–∂–µ –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –¥–æ–±–∞–≤–∏–ª —ç—Ç–æ–º—É —Å–ª–æ–≤–∞—Ä—é –¥–≤–∞ –∞—Ç—Ä–∏–±—É—Ç–∞:

# min_values() ‚Äî —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∏–º–µ—é—â–∏—Ö –Ω–∞–∏–º–µ–Ω—å—à–µ–µ
# –∑–Ω–∞—á–µ–Ω–∏–µ
# max_values() ‚Äî —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∏–º–µ—é—â–∏—Ö –Ω–∞–∏–±–æ–ª—å—à–µ–µ
# –∑–Ω–∞—á–µ–Ω–∏–µ

# –û–±–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –≠–ª–µ–º–µ–Ω—Ç–æ–º —Å–ª–æ–≤–∞—Ä—è –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å –∫–æ—Ä—Ç–µ–∂ (–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ).

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –≠–ª–µ–º–µ–Ω—Ç—ã —Å–ª–æ–≤–∞—Ä—è –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Å–ø–∏—Å–∫–∞—Ö –¥–æ–ª–∂–Ω—ã —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è
# –≤ —Å–≤–æ–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –§—É–Ω–∫—Ü–∏–∏ data.min_values() –∏ data.max_values() –¥–æ–ª–∂–Ω—ã —É—á–∏—Ç—ã–≤–∞—Ç—å
# —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä—å data –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ø–∞—Ä–∞
# –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –∏ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Å–ø–∏—Å–∫–∞—Ö –¥–∞–Ω–Ω—ã–µ –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω—ã
# –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å.

from collections import Counter

data = Counter('aksjaskfjsklfjdslkfjajfopewtoieqpwdpqworiiqjskanvmcxbmpewrqopkqwlmdzczmxvmvlnjpjqpkqzxvmbowiqeorewi')

data.min_values = lambda: list(filter(lambda x: x[1] == min(data.values()), data.items()))
data.max_values = lambda: list(filter(lambda x: x[1] == max(data.values()), data.items()))



# Here we go again
# –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ñ–∞–π–ª name_log.csv, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ª–æ–≥–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ –∑–∞–ø–∏—Å–∞–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–æ –≤—Ç–æ—Ä–æ–º
# ‚Äî –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, –≤ —Ç—Ä–µ—Ç—å–µ–º ‚Äî –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è. –ü—Ä–∏ —ç—Ç–æ–º email
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω—è—Ç—å –Ω–µ –º–æ–∂–µ—Ç, —Ç–æ–ª—å–∫–æ –∏–º—è:

# username,email,dtime
# rare_charles6,charlesthompson@inbox.ru,15/11/2021 08:15
# busy_patricia5,patriciasmith@bk.ru,07/11/2021 08:07
# ...

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω—è–ª –∏–º—è.
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –ø–æ—á—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É–∫–∞–∑–∞–≤ –¥–ª—è
# –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω. –ü–æ—á—Ç–æ–≤—ã–µ —è—â–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å
# —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –≤ —Å–ª–µ–¥—É—é—â–µ–º
# —Ñ–æ—Ä–º–∞—Ç–µ:

# <–∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã>: <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–º–µ–Ω>

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ù–∞—á–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:

# barbaraanderson@bk.ru: 3
# barbarabrown@rambler.ru: 3
# ...

import csv
from collections import Counter

with open('name_log.csv', encoding='utf-8') as file:
    reader = list(csv.reader(file))[1::]
    counter_changes = Counter([email for name, email, dt in reader])
    for user_email in sorted(counter_changes.items(), key=lambda x: x[0]):
        print(f'{user_email[0]}: {user_email[1]}')



# –§—É–Ω–∫—Ü–∏—è scrabble()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é scrabble(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

# symbols ‚Äî –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤
# word ‚Äî —Å–ª–æ–≤–æ

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å True, –µ—Å–ª–∏ –∏–∑ –Ω–∞–±–æ—Ä–∞ —Å–∏–º–≤–æ–ª–æ–≤ symbols –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å
# —Å–ª–æ–≤–æ word, –∏–ª–∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è
# —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞, –∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏—Ö —Ä–µ–≥–∏—Å—Ç—Ä.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é scrabble(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from collections import Counter

def scrabble(symbols, word):
    counter_symb = Counter(symbols.lower())
    counter_letters = Counter(word.lower())
    number_coincidences = 0
    for char, count in counter_letters.items():
        if counter_symb[char] >= count:
            number_coincidences += 1
    if number_coincidences == len(counter_letters):
        return True
    else:
        return False



# –§—É–Ω–∫—Ü–∏—è print_bar_chart()
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é print_bar_chart(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º
# –ø–æ—Ä—è–¥–∫–µ:

# data ‚Äî —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
# mark ‚Äî –æ–¥–∏–Ω–æ—á–Ω—ã–π —Å–∏–º–≤–æ–ª

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å:

# —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ —Å—Ç—Ä–æ–∫–µ, –µ—Å–ª–∏ data —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π
# —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ, –µ—Å–ª–∏ data —è–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º

# –ó–∞—Ç–µ–º —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ —Å—Ç–æ–ª–±—á–∞—Ç–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã, —É–∫–∞–∑—ã–≤–∞—è –∫–∞–∂–¥—ã–π
# —Å–∏–º–≤–æ–ª (—Å—Ç—Ä–æ–∫—É) –∏ –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ mark
# —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —á–∏—Å–ª–æ —Ä–∞–∑, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ mark='+', —Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ä–∞–≤–Ω–æ–µ —á–µ—Ç—ã—Ä–µ–º,
# –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –∫–∞–∫ ++++. –°–∏–º–≤–æ–ª—ã (—Å—Ç—Ä–æ–∫–∏) –≤ –¥–∏–∞–≥—Ä–∞–º–º–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤
# –ø–æ—Ä—è–¥–∫–µ —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞, –ø—Ä–∏ —Ä–∞–≤–Ω—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö ‚Äî –≤ —Å–≤–æ–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ,
# –∫–∞–∂–¥–∞—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

# <—Å–∏–º–≤–æ–ª –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞> |<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω—É–∂–Ω–æ–µ
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏–º–µ–µ—Ç –º–µ–Ω—å—à—É—é –¥–ª–∏–Ω—É, —á–µ–º –¥—Ä—É–≥–∏–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —É—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä. –¢–æ –µ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∏ Python
# –∏ python —Å—á–∏—Ç–∞—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é print_bar_chart(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from collections import Counter

def print_bar_chart(data, mark):
    if type(data) == str:
        data_counter = Counter(data.lower())
        for elem in sorted(data_counter, key=data_counter.get, reverse=True):
            print(f'{elem.ljust(len(max(data_counter, key=len)))} |{data_counter[elem] * mark}')
    elif type(data) == list:
        data_counter = Counter(data)
        for elem in sorted(data_counter, key=data_counter.get, reverse=True):
            print(f'{elem.ljust(len(max(data_counter, key=len)))} |{data_counter[elem] * mark}')



# –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ã –±–µ—Ä—É—Ç —Å–≤–æ–µ üò¢
# –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –¢–∏–º—É—Ä —Ä–µ—à–∏–ª –∑–∞–Ω—è—Ç—å—Å—è –ø—Ä–æ–¥–∞–∂–µ–π –æ–≤–æ—â–µ–π. –£ –Ω–µ–≥–æ –∏–º–µ—é—Ç—Å—è
# –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∑–∞ –≥–æ–¥, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –Ω–∞ —á–µ—Ç—ã—Ä–µ —Ñ–∞–π–ª–∞ –ø–æ –∫–≤–∞—Ä—Ç–∞–ª–∞–º: quarter1.csv,
# quarter2.csv, quarter3.csv –∏ quarter4.csv. –í –∫–∞–∂–¥–æ–º —Ñ–∞–π–ª–µ –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è
# –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –∞ –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö –∑–∞
# –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ—Å—è—Ü:

# –ø—Ä–æ–¥—É–∫—Ç,—è–Ω–≤–∞—Ä—å,—Ñ–µ–≤—Ä–∞–ª—å,–º–∞—Ä—Ç
# –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å,39,61,3
# –î–∞–π–∫–æ–Ω,51,96,83
# ...

# –¢–∞–∫–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª prices.json, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–æ–º —è–≤–ª—è–µ—Ç—Å—è
# –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äî —Ü–µ–Ω–∞ –∑–∞ –∫–∏–ª–æ–≥—Ä–∞–º–º –≤ —Ä—É–±–ª—è—Ö:

# {
#    "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å": 53,
#    "–î–∞–π–∫–æ–Ω": 55,
# ...
# }

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ ‚Äî —Å—É–º–º—É, –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –¢–∏–º—É—Ä–æ–º
# –∑–∞ –≥–æ–¥ –Ω–∞ –ø—Ä–æ–¥–∞–∂–µ –æ–≤–æ—â–µ–π.

import csv
import json
from collections import Counter

with open('quarter1.csv', 'r', encoding='utf-8') as file:
    reader = list(csv.reader(file))[1::]
    first_quarter_revenue = Counter()
    for product, cost1, cost2, cost3 in reader:
        first_quarter_revenue[product] += (int(cost1) + int(cost2) + int(cost3))

with open('quarter2.csv', 'r', encoding='utf-8') as file:
    reader = list(csv.reader(file))[1::]
    second_quarter_revenue = Counter()
    for product, cost1, cost2, cost3 in reader:
        second_quarter_revenue[product] += (int(cost1) + int(cost2) + int(cost3))

with open('quarter3.csv', 'r', encoding='utf-8') as file:
    reader = list(csv.reader(file))[1::]
    third_quarter_revenue = Counter()
    for product, cost1, cost2, cost3 in reader:
        third_quarter_revenue[product] += (int(cost1) + int(cost2) + int(cost3))

with open('quarter4.csv', 'r', encoding='utf-8') as file:
    reader = list(csv.reader(file))[1::]
    fourth_quarter_revenue = Counter()
    for product, cost1, cost2, cost3 in reader:
        fourth_quarter_revenue[product] += (int(cost1) + int(cost2) + int(cost3))

total_count_products = first_quarter_revenue + second_quarter_revenue + third_quarter_revenue + fourth_quarter_revenue

with open('prices.json', 'r', encoding='utf-8') as file:
    prices_products = json.load(file)
    total_sum = 0
    for product, price in prices_products.items():
        total_sum += total_count_products[product] * price

print(total_sum)



# –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ã –±–µ—Ä—É—Ç —Å–≤–æ–µ üò≠
# –¢–∏–º—É—Ä –ø—Ä–æ–¥–∞–µ—Ç –∫–Ω–∏–≥–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∑–∞ 1‚Äî11 –∫–ª–∞—Å—Å. –£ –Ω–µ–≥–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º
# —É–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–Ω–∏–≥–∏, –∏–º–µ—é—â–∏–µ—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏. –ö –¢–∏–º—É—Ä—É –ø—Ä–∏—Ö–æ–¥—è—Ç nn –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π, –Ω–∞–∑—ã–≤–∞—é—Ç
# –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∏ —Ö–æ—Ç—è—Ç –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–Ω–∏–≥—É, –∏ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –æ–Ω–∏ –≥–æ—Ç–æ–≤—ã
# –∑–∞–ø–ª–∞—Ç–∏—Ç—å, –∏ –µ—Å–ª–∏ –∫–Ω–∏–≥–∞ –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏, –¢–∏–º—É—Ä –µ–µ –ø—Ä–æ–¥–∞–µ—Ç.

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥, –∫–æ—Ç–æ—Ä—É—é –¢–∏–º—É—Ä –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç
# –Ω–∞ –ø—Ä–æ–¥–∞–∂–µ –∫–Ω–∏–≥.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö
# –ø—Ä–æ–±–µ–ª–æ–º, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏—Ö –Ω–∞–±–æ—Ä –∫–Ω–∏–≥, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏. –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ
# –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ‚Äî –∫–Ω–∏–≥–∞ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å 1 1 4
# –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞–±–æ—Ä –∏–∑ –¥–≤—É—Ö –∫–Ω–∏–≥ –∑–∞ –ø–µ—Ä–≤—ã–π –∫–ª–∞—Å—Å –∏ –æ–¥–Ω–æ–π –∫–Ω–∏–≥–∏ –∑–∞ —á–µ—Ç–≤–µ—Ä—Ç—ã–π –∫–ª–∞—Å—Å.
# –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö nn —Å—Ç—Ä–æ–∫–∞—Ö
# –≤–≤–æ–¥—è—Ç—Å—è –¥–≤–∞ —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º, –≥–¥–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ —è–≤–ª—è–µ—Ç—Å—è –Ω–æ–º–µ—Ä–æ–º –∫–ª–∞—Å—Å–∞,
# –≤—Ç–æ—Ä–æ–µ ‚Äî —Å—É–º–º–æ–π, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–π –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ ‚Äî –æ–±—â—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥, –∫–æ—Ç–æ—Ä—É—é –∑–∞—Ä–∞–±–æ—Ç–∞–ª
# –¢–∏–º—É—Ä.

from collections import Counter

books_for_sale = Counter(map(int, input().split()))
total_sum = 0

for _ in range(int(input())):
    book_and_cost = list(map(int, input().split()))
    if books_for_sale[book_and_cost[0]] != 0:
        total_sum += book_and_cost[1]
        books_for_sale[book_and_cost[0]] -= 1

print(total_sum)
