# Январь, февраль, ...
# Напишите программу с использованием конструкции try-except, которая выводит название
# месяца, соответствующее введенному целому числу (от 1 до 12 включительно), причем
# если введенное число не принадлежит отрезку [1; 12], программа должна вывести
# текст:

# Введено число из недопустимого диапазона
# если введенное значение не является целым числом, программа должна вывести текст:
# Введено некорректное значение

# Формат входных данных
# На вход программе подается единственная строка с произвольным значением.

# Формат выходных данных
# Программа должна вывести полное название месяца на английском, соответствующее введенному
# числу (от 1 до 12 включительно) или текст с соответствующей ошибкой, если введенное
# значение некорректно.

import calendar
from collections import defaultdict 

number_of_months = defaultdict()
for i in range(1, 11):
    number_of_months[i] = list(calendar.month_name)[i]

try:
    number_month = int(input())
    print(number_of_months[number_month])
except ValueError:
    print('Введено некорректное значение')
except (IndexError, KeyError):
    print('Введено число из недопустимого диапазона')



# Функция add_to_list_in_dict()
# Реализуйте функцию add_to_list_in_dict() с использованием конструкции try-except,
# которая принимает три аргумента в следующем порядке:

# data — словарь списков, то есть словарь, значением в котором является список
# key — хешируемый объект
# element — произвольный объект

# Функция должна добавлять объект element в список по ключу key в словаре data. Если
# ключа key в словаре data нет, функция должна добавить его в словарь, присвоить ему
# в качестве значения пустой список и добавить в этот список объект element.

# Примечание 1. Функция должна изменять переданный словарь и возвращать значение None.

# Примечание 2. Элементы в словарь и в список должны добавляться в конец.

# Примечание 3. В тестирующую систему сдайте программу, содержащую только необходимую
# функцию add_to_list_in_dict(), но не код, вызывающий ее.

def add_to_list_in_dict(data, key, element):
    try:
        data[key].append(element)
    except KeyError:
        data[key] = data.get(key, []) + [element]



# readme.txt
# Напишите программу с использованием конструкции try-except, которая принимает на
# вход название текстового файла и выводит его содержимое. Если файла с данным
# названием нет в папке с программой, программа должна вывести текст:

# ​Файл не найден
# Формат входных данных
# На вход программе подается название текстового файла.

# Формат выходных данных
# Программа должна вывести содержимое файла с введенным названием или соответствующий
# текст, если файла с данным названием нет в папке с программой.

try:
    with open(input(), 'r', encoding='utf-8') as file:
        print(file.read())
except:
    print('Файл не найден')