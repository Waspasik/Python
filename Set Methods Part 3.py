# Одинаковые цифры
# На вход программе подаются два числа. Напишите программу, определяющую, есть ли в данных
# числах одинаковые цифры.

# Формат входных данных
# На вход программе подаются два натуральных числа, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести YES, если в записи данных чисел есть одинаковые цифры и NO если
# нет.

set1 = set(input())
set2 = set(input())
if set1.isdisjoint(set2):
    print('NO')
else:
    print('YES')



# Все цифры
# На вход программе подаются два числа. Напишите программу, которая определяет, входят ли
# в запись первого числа все цифры, содержащиеся в записи второго (независимо от повтора,
# то есть количества цифр) числа или нет.

# Формат входных данных
# На вход программе подаются два натуральных числа, каждое на отдельной строке.

# Формат выходных данных
# Программа должна вывести YES, если в запись первого числа входят все цифры, содержащиеся
# в записи второго числа и NO в противном случае.

set1 = set(input())
set2 = set(input())
if set1.issuperset(set2):
    print('YES')
else:
    print('NO')



# Урок информатики
# Даны по 10-балльной шкале оценки по информатике трех учеников. Напишите программу, которая
# выводит множество оценок, которые есть и у первого и у второго учеников, но которых нет у
# третьего ученика.

# Формат входных данных
# На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого
# ученика на отдельной строке).

# Формат выходных данных
# Программа должна вывести множество оценок в порядке убывания на одной строке, разделенных
# пробелами, в соответствии с условием задачи.

# Примечание. Оценка ученика находится в диапазоне от 0 до 10 включительно.

student1 = set(int(i) for i in input().split())
student2 = set(int(i) for i in input().split())
student3 = set(int(i) for i in input().split())
overall_ratings = student1.intersection(student2)

print(*sorted(overall_ratings.difference(student3), reverse=True))



# Урок математики
# Даны по 10-балльной шкале оценки по математике трех учеников. Напишите программу, которая
# выводит множество оценок, имеющихся у учеников, которые встречаются не более, чем у двух
# из указанных учеников.

# Формат входных данных
# На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого
# ученика на отдельной строке).

# Формат выходных данных
# Программа должна вывести множество оценок в порядке возрастания на одной строке, разделенных
# пробелами, в соответствии с условием задачи.

# Примечание. Оценка ученика находится в диапазоне от 0 до 10 включительно.

student1 = set(int(i) for i in input().split())
student2 = set(int(i) for i in input().split())
student3 = set(int(i) for i in input().split())

intersection_ratings = student1 & student2 & student3
overall_ratings = student1 | student2 | student3

print(*sorted(overall_ratings - intersection_ratings))



# Урок физики
# Даны по 10-балльной шкале оценки по физике трех учеников. Напишите программу, которая выводит
# множество оценок третьего ученика, которые не встречаются ни у первого, ни у второго ученика.

# Формат входных данных
# На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого
# ученика на отдельной строке).

# Формат выходных данных
# Программа должна вывести множество оценок в порядке убывания на одной строке, разделенных
# пробелами, в соответствии с условием задачи.

# Примечание. Оценка ученика находится в диапазоне от 0 до 10 включительно.

student1 = set(int(i) for i in input().split())
student2 = set(int(i) for i in input().split())
student3 = set(int(i) for i in input().split())

print(*sorted(student3 - (student1 | student2), reverse=True))



# Урок биологии
# Даны по 10-балльной шкале оценки по биологии трех учеников. Напишите программу, которая выводит
# множество оценок, не встречающихся ни у одного из трех учеников.

# Формат входных данных
# На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого
# ученика на отдельной строке).

# Формат выходных данных
# Программа должна вывести множество оценок в порядке возрастания на одной строке, разделенных
# пробелами, в соответствии с условием задачи.

# Примечание. Оценка ученика находится в диапазоне от 0 до 10 включительно.

student1 = set(int(i) for i in input().split())
student2 = set(int(i) for i in input().split())
student3 = set(int(i) for i in input().split())

print(*sorted(set(int(i) for i in range(11)) - (student1 | student2 | student3)))