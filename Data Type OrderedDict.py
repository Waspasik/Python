# –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Å–ª–æ–≤–∞—Ä—å data. –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª
# –¥–∞–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å, —Ä–∞—Å–ø–æ–ª–æ–∂–∏–≤ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±—ã —Å–ª–æ–≤–∞—Ä—å data –∏–º–µ–ª –≤–∏–¥:

# data = OrderedDict(key1='value1', key2='value2', key3='value3')

# —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã –≤—ã–≤–µ—Å—Ç–∏:

# OrderedDict([('key3', 'value3'), ('key2', 'value2'), ('key1', 'value1')])

from collections import OrderedDict

data = OrderedDict({'Name': '–ë—Ä—É—Å–Ω–∏–∫–∞', 'IsNetObject': '–¥–∞', 'OperatingCompany': '–ë—Ä—É—Å–Ω–∏–∫–∞',
                    'TypeObject': '–∫–∞—Ñ–µ', 'AdmArea': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ–∫—Ä—É–≥', 'District': '—Ä–∞–π–æ–Ω –ê—Ä–±–∞—Ç',
                    'Address': '–≥–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞, –ø–µ—Ä–µ—É–ª–æ–∫ –°–∏–≤—Ü–µ–≤ –í—Ä–∞–∂–µ–∫, –¥–æ–º 6/2', 'SeatsCount': '10'})

data_copy = data.copy()

for key in reversed(data_copy):
    data.move_to_end(key)

print(data)



# –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Å–ª–æ–≤–∞—Ä—å data —Å —á–µ—Ç–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π
# –Ω–∏–∂–µ –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –¥–∞–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å, —Ä–∞—Å–ø–æ–ª–æ–∂–∏–≤ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É
# –ø—Ä–∞–≤–∏–ª—É: –ø–µ—Ä–≤—ã–π, –ø–æ—Å–ª–µ–¥–Ω–∏–π, –≤—Ç–æ—Ä–æ–π, –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π, —Ç—Ä–µ—Ç–∏–π, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±—ã —Å–ª–æ–≤–∞—Ä—å data –∏–º–µ–ª –≤–∏–¥:

# data = OrderedDict(key1='value1', key2='value2', key3='value3')

# —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã –≤—ã–≤–µ—Å—Ç–∏:

# OrderedDict([('key3', 'value3'), ('key2', 'value2'), ('key1', 'value1')])

from collections import OrderedDict

data = OrderedDict({'Name': '–ë—Ä—É—Å–Ω–∏–∫–∞', 'IsNetObject': '–¥–∞', 'OperatingCompany': '–ë—Ä—É—Å–Ω–∏–∫–∞',
                    'TypeObject': '–∫–∞—Ñ–µ', 'AdmArea': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ–∫—Ä—É–≥', 'District': '—Ä–∞–π–æ–Ω –ê—Ä–±–∞—Ç',
                    'Address': '–≥–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞, –ø–µ—Ä–µ—É–ª–æ–∫ –°–∏–≤—Ü–µ–≤ –í—Ä–∞–∂–µ–∫, –¥–æ–º 6/2', 'SeatsCount': '10'})

data_copy = data.copy()

for i in range(len(data)):
    if i % 2 == 0:
        print()
        data.move_to_end(list(data_copy)[i])
    else:
        data.move_to_end(list(data_copy)[-i])
    
print(data)



# –í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è data, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è OrderedDict —Å–ª–æ–≤–∞—Ä—å. –î–æ–ø–æ–ª–Ω–∏—Ç–µ
# –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –¥–æ–±–∞–≤–∏–ª —ç—Ç–æ–º—É —Å–ª–æ–≤–∞—Ä—é –¥–≤–∞ –∞—Ç—Ä–∏–±—É—Ç–∞:

# sorted_keys() ‚Äî —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
# —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä—è data
# sorted_values() ‚Äî —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
# —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π —Å–ª–æ–≤–∞—Ä—è data

# –û–±–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç reverse, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
# —Ä–∞–≤–Ω—ã–π False, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:

# False ‚Äî –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
# True ‚Äî –ø–æ —É–±—ã–≤–∞–Ω–∏—é

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è data –º–æ–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å,
# —Ç–æ –µ—Å—Ç—å –æ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–∏, –∏–º–µ—é—â–∏–µ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã, –∞ —Ç–∞–∫–∂–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∏–º–µ—é—â–∏–µ —Ä–∞–∑–Ω—ã–µ
# —Ç–∏–ø—ã.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –§—É–Ω–∫—Ü–∏–∏ data.sorted_keys() –∏ data.sorted_values() –¥–æ–ª–∂–Ω—ã —É—á–∏—Ç—ã–≤–∞—Ç—å
# —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä—å data –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ø–∞—Ä–∞
# –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –∏ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Å–ø–∏—Å–∫–∞—Ö –¥–∞–Ω–Ω—ã–µ –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω—ã
# –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å.

from collections import OrderedDict

data = OrderedDict({'Law & Order': 1990, 'The Practice': 1997, 'Six Feet Under': 2001,
                    'Joan of Arcadia': 2003, 'The West Wing': 1999, 'Deadwood': 2004,
                    'The Sopranos': 1999, 'Boston Legal': 2004, 'ER': 1994,
                    'Friday Night Lights': 2006, '24': 2001, 'Heroes': 2006,
                    'Lost': 2004, 'Dexter': 2006, 'Damages': 2007,
                    'Big Love': 2006, 'House': 2004, 'Downton Abbey': 2010,
                    "Grey's Anatomy": 2005, 'Homeland': 2011, 'Breaking Bad': 2008,
                    'Game of Thrones': 2011, 'CSI: Crime Scene Investigations': 2000, 'Boardwalk Empire': 2010,
                    'True Blood': 2008, 'House of Cards': 2013, 'True Detective': 2014})

data.sorted_keys = lambda reverse=False: sorted(data.keys(), reverse=reverse)
data.sorted_values = lambda reverse=False: sorted(data.values(), reverse=reverse)



# –§—É–Ω–∫—Ü–∏—è custom_sort() üå∂Ô∏è
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é custom_sort(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º
# –ø–æ—Ä—è–¥–∫–µ:

# ordered_dict ‚Äî —Å–ª–æ–≤–∞—Ä—å OrderedDict
# by_values ‚Äî –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ False

# –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å ordered_dict:

# –ø–æ –∫–ª—é—á–∞–º, –µ—Å–ª–∏ by_values –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ False
# –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º, –µ—Å–ª–∏ by_values –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ True

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –∏–∑–º–µ–Ω—è—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å, –∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–≤—ã–π.
# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å None.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é —Å–ª–æ–≤–∞—Ä—å –º–æ–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å,
# —Ç–æ –µ—Å—Ç—å –æ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–∏, –∏–º–µ—é—â–∏–µ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã, –∞ —Ç–∞–∫–∂–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∏–º–µ—é—â–∏–µ —Ä–∞–∑–Ω—ã–µ
# —Ç–∏–ø—ã.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ï—Å–ª–∏ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç —Ä–∞–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —Ç–æ —Å–ª–µ–¥—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö
# –∏—Å—Ö–æ–¥–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
# —Ñ—É–Ω–∫—Ü–∏—é custom_sort(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

from collections import OrderedDict

def custom_sort(ordered_dict, by_values=False):
    for key in sorted(ordered_dict, key=ordered_dict.get):
        ordered_dict.move_to_end(key)
    else:
        for key in sorted(ordered_dict):
            ordered_dict.move_to_end(key)
    return None

data = OrderedDict(Earth=3, Mercury=1, Mars=4, Venus=2)
custom_sort(data, by_values=False)

print(*data.items())