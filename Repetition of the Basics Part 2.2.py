# Напишите программу для определения, является ли число произведением двух чисел из данного набора,
# выводящую результат в виде ответа «ДА» или «НЕТ».

# Формат входных данных
# В первой строке подаётся число n(0 < n < 1000) – количество чисел в наборе. В последующих n строках
# вводятся целые числа, составляющие набор (могут повторяться). Затем следует целое число, которое
# является или не является произведением двух каких-то чисел из набора.

# Формат выходных данных
# Программа должна вывести «ДА» или «НЕТ» в соответствии с условием задачи.

# Примечание 1. Само на себя число из набора умножиться не может, другими словами, два множителя
# должны иметь разные индексы в наборе.

# Примечание 2. Для решения задачи используйте вложенные циклы.

numbers = [int(input()) for i in range(int(input()))]
result = int(input())
flag = False
for i in range(len(numbers)):
    for j in range(len(numbers)):
        if i != j and numbers[i] * numbers[j] == result:
            flag = True
            break
if flag == True:
    print('ДА')
else:
    print('НЕТ')



# Тимур и Руслан пытаются разделить фронт работы по курсу "Python для профессионалов". Для этого
# они решили сыграть в камень, ножницы и бумагу. Помогите ребятам бросить честный жребий и определить,
# кто будет делать очередной модуль нового курса.

# Формат входных данных
# На вход программе подаются две строки текста, содержащие слова "камень", "ножницы" или "бумага". На
# первой строке записан выбор Тимура, на второй – выбор Руслана.

# Формат выходных данных
# Программа должна вывести результат жеребьёвки, то есть кто победит: Тимур, Руслан или же они сыграют
# вничью.

# Примечание. Правила игры стандартные: камень побеждает ножницы, но проигрывает бумаге, а ножницы
# побеждают бумагу.

RPS = ['камень', 'ножницы', 'бумага']
Timur, Ruslan = input(), input()

def game():
    if Timur == Ruslan:
        return print('ничья')
    elif Timur == RPS[0] and Ruslan == RPS[1] or Timur == RPS[1] and Ruslan == RPS[2] or Timur == RPS[2] and Ruslan == RPS[0]:
        return print('Тимур')
    else:
        return print('Руслан')

game()



# Проиграв 1010 раз Тимуру, Руслан понял, что так дело дальше не пойдет, и решил усложнить игру. Теперь
# Тимур и Руслан играют в игру Камень, ножницы, бумага, ящерица, Спок. Помогите ребятам вновь бросить
# честный жребий и определить, кто будет делать следующий модуль в новом курсе.

# Формат входных данных
# На вход программе подаются две строки текста, содержащие по одному слову из перечня "камень","ножницы",
# "бумага", "ящерица" или "Спок". На первой строке записан выбор Тимура, на второй – выбор Руслана.

# Формат выходных данных
# Программа должна вывести результат жеребьёвки: кто победил - Тимур или Руслан, или они сыграли вничью.

# Примечание. Правила игры стандартные: ножницы режут бумагу. Бумага заворачивает камень. Камень давит
# ящерицу, а ящерица травит Спока, в то время как Спок ломает ножницы, которые, в свою очередь, отрезают
# голову ящерице, которая ест бумагу, на которой улики против Спока. Спок испаряет камень, а камень,
# разумеется, затупляет ножницы.

RPS = ['камень', 'ножницы', 'бумага', 'ящерица', 'Спок']
Timur, Ruslan = input(), input()

def game():
    if Timur == Ruslan:
        return print('ничья')
    elif Timur == RPS[0] and Ruslan == RPS[1] or Timur == RPS[0] and Ruslan == RPS[3]:
        return print('Тимур')
    elif Timur == RPS[1] and Ruslan == RPS[2] or Timur == RPS[1] and Ruslan == RPS[3]:
        return print('Тимур')
    elif Timur == RPS[2] and Ruslan == RPS[0] or Timur == RPS[2] and Ruslan == RPS[4]:
        return print('Тимур')
    elif Timur == RPS[3] and Ruslan == RPS[2] or Timur == RPS[3] and Ruslan == RPS[4]:
        return print('Тимур')
    elif Timur == RPS[4] and Ruslan == RPS[0] or Timur == RPS[4] and Ruslan == RPS[1]:
        return print('Тимур')
    else:
        return print('Руслан')

game()



# Дана строка текста, состоящая из букв русского алфавита "О" и "Р". Буква "О" – соответствует выпадению
# Орла, а буква "Р" – соответствует выпадению Решки. Напишите программу, которая подсчитывает наибольшее
# количество подряд выпавших Решек.

# Формат входных данных
# На вход программе подается строка текста, состоящая из букв русского алфавита "О" и "Р".

# Формат выходных данных
# Программа должна вывести наибольшее количество подряд выпавших Решек.

# Примечание. Если выпавших Решек нет, то необходимо вывести число 00.

string = input()
count = 0
count_max = 0
for i in range(len(string)):
    if string[i] == 'Р':
        count += 1
    else:
        count = 0
    if count > count_max:
        count_max = count
if count_max > 0:
    print(count_max)
else:
    print(0)