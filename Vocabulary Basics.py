# Дополните приведенный код, чтобы он вывел имена всех пользователей (в алфавитном порядке),
# чей номер оканчивается на 88.

# Примечание. Имена необходимо вывести на одной строке, разделяя символом пробела.

users = [{'name': 'Todd', 'phone': '551-1414', 'email': 'todd@gmail.com'},
         {'name': 'Helga', 'phone': '555-1618', 'email': 'helga@mail.net'},
         {'name': 'Olivia', 'phone': '449-3141', 'email': ''},
         {'name': 'LJ', 'phone': '555-2718', 'email': 'lj@gmail.net'},
         {'name': 'Ruslan', 'phone': '422-145-9098', 'email': 'rus-lan.cha@yandex.ru'},
         {'name': 'John', 'phone': '233-421-32', 'email': ''},
         {'name': 'Lara', 'phone': '+7998-676-2532', 'email': 'g.lara89@gmail.com'},
         {'name': 'Alina', 'phone': '+7948-799-2434', 'email': 'ali.ch.b@gmail.com'},
         {'name': 'Robert', 'phone': '420-2011', 'email': ''},
         {'name': 'Riyad', 'phone': '128-8890-128', 'email': 'r.mahrez@mail.net'},
         {'name': 'Khabib', 'phone': '+7995-600-9080', 'email': 'kh.nurmag@gmail.com'},
         {'name': 'Olga', 'phone': '6449-314-1213', 'email': ''},
         {'name': 'Roman', 'phone': '+7459-145-8059', 'email': 'roma988@mail.ru'},
         {'name': 'Maria', 'phone': '12-129-3148', 'email': 'm.sharapova@gmail.com'},
         {'name': 'Fedor', 'phone': '+7445-341-0545', 'email': ''},
         {'name': 'Tim', 'phone': '242-449-3141', 'email': 'timm.ggg@yandex.ru'}]

def check_number(users):
    usernames = []
    
    for info in users:
        if int(info['phone'][-1]) == 8:
            usernames.append(info['name'])
    
    return print(*sorted(usernames))

check_number(users)



# Дополните приведенный код, чтобы он вывел имена всех пользователей (в алфавитном порядке),
# у которых нет информации об электронной почте. 

# Примечание 1. Ключ email может отсутствовать в словаре.

# Примечание 2. Имена необходимо вывести на одной строке, разделяя символом пробела.

users = [{'name': 'Todd', 'phone': '551-1414', 'email': 'todd@gmail.com'},
         {'name': 'Helga', 'phone': '555-1618'},
         {'name': 'Olivia', 'phone': '449-3141', 'email': ''},
         {'name': 'LJ', 'phone': '555-2718', 'email': 'lj@gmail.net'},
         {'name': 'Ruslan', 'phone': '422-145-9098', 'email': 'rus-lan.cha@yandex.ru'},
         {'name': 'John', 'phone': '233-421-32', 'email': ''},
         {'name': 'Lara', 'phone': '+7998-676-2532', 'email': 'g.lara89@gmail.com'},
         {'name': 'Alina', 'phone': '+7948-799-2434'},
         {'name': 'Robert', 'phone': '420-2011', 'email': ''},
         {'name': 'Riyad', 'phone': '128-8890-128', 'email': 'r.mahrez@mail.net'},
         {'name': 'Khabib', 'phone': '+7995-600-9080', 'email': 'kh.nurmag@gmail.com'},
         {'name': 'Olga', 'phone': '6449-314-1213', 'email': ''},
         {'name': 'Roman', 'phone': '+7459-145-8059'},
         {'name': 'Maria', 'phone': '12-129-3148', 'email': 'm.sharapova@gmail.com'},
         {'name': 'Fedor', 'phone': '+7445-341-0545', 'email': ''},
         {'name': 'Tim', 'phone': '242-449-3141', 'email': 'timm.ggg@yandex.ru'}]


def check_email(users):
    usernames = []
    
    for info in users:
        if 'email' not in info or info['email'] == '':
            usernames.append(info['name'])
    
    print(*sorted(usernames))

check_email(users)



# Строковое представление
# Напишите программу, которая будет превращать натуральное число в строку, заменяя все цифры
# в числе на слова:

# 0 на zero;
# 1 на one;
# 2 на two;
# 3 на three;
# 4 на four;
# 5 на five;
# 6 на six;
# 7 на seven;
# 8 на eight;
# 9 на nine.
# Формат входных данных
# На вход программе подается натуральное число.

# Формат выходных данных
# Программа должна вывести строковое представление числа.

# Примечание. Используйте словарь вместо условного оператора.

numbers = {0: "zero", 1: "one", 2: "two",
    3: "three", 4: "four", 5: "five",
    6: "six", 7: "seven", 8: "eight",
    9: "nine"}

print(*[numbers[int(num)] for num in input()])



# Информация об учебных курсах
# Напишите программу, которая по номеру курса выводит информацию о данном курсе. 

# Номер курса (ключ)	Номер аудитории (значение)	Преподаватель (значение)	Время (значение)
# CS101	                3004	                    Хайнс	                    8:00
# CS102	                4501	                    Альварадо	                9:00
# CS103	                6755	                    Рич	                        10:00
# NT110	                1244	                    Берк	                    11:00
# CM241	                1411	                    Ли	                        13:00

# Формат входных данных
# На вход программе подается одна строка – номер курса.

# Формат выходных данных
# Программа должна вывести номер курса, затем номер аудитории, имя преподавателя и время проведения
# курса в соответствии с примерами.

# римечание 1. Используйте словарь вместо условного оператора.

courses = {"CS101": "3004, Хайнс, 8:00",
          "CS102": "4501, Альварадо, 9:00",
          "CS103": "6755, Рич, 10:00",
          "NT110": "1244, Берк, 11:00",
          "CM241": "1411, Ли, 13:00"}

number_course = input()

print(f'{number_course}:', courses[number_course])



# Набор сообщений
# На мобильных кнопочных телефонах текстовые сообщения можно отправлять с помощью цифровой
# клавиатуры. Поскольку с каждой клавишей связано несколько букв, для большинства букв
# требуется несколько нажатий клавиш. При однократном нажатии цифры генерируется первый
# символ, указанный для этой клавиши. Нажатие цифры 2, 3, 42,3,4 или 55 раз генерирует
# второй, третий, четвертый или пятый символ клавиши.

# 1	.,?!:
# 2	ABC
# 3	DEF
# 4	GHI
# 5	JKL
# 6	MNO
# 7	PQRS
# 8	TUV
# 9	WXYZ
# 0	space (пробел)

# Напишите программу, которая отображает нажатия клавиш, необходимые для введенного сообщения.

# Формат входных данных
# На вход программе подается одна строка – текстовое сообщение.

# Формат выходных данных
# Программа должна вывести нажатия клавиш, необходимых для введенного сообщения.

# Примечание 1. Ваша программа должна обрабатывать как прописные, так и строчные буквы.

# Примечание 2. Ваша программа должна игнорировать любые символы, не указанные в приведенной
# выше таблице.

keyboard = {".":'1', ",":'11', "?":'111', "!":'1111', ":":'11111',
           "A":'2', "B":'22', "C":'222',
           "D":'3', "E":'33', "F":'333',
           "G":'4', "H":'44', "I":'444',
           "J":'5', "K":'55', "L":'555',
           "M":'6', "N":'66', "O":'666',
           "P":'7', "Q":'77', "R":'777', "S": '7777',
           "T":'8', "U":'88', "V":'888',
           "W":'9', "X":'99', "Y":'999', "Z": '9999',
           " ":'0'}

print(''.join([keyboard[letter.upper()] for letter in input().replace('"', '')]))



# Код Морзе
# Код Морзе для представления цифр и букв использует тире и точки.

# Напишите программу для кодирования текстового сообщения в соответствии с кодом Морзе.

# Символ	 Код	  Символ	  Код	   Символ	  Код	   Символ	   Код
# A	         .-	      J	          .---	   S	      ...	   1	       .----
# B	         -...	  K	          -.-	   T	      -	       2	       ..---
# C	         -.-.	  L	          .-..	   U	      ..-	   3	       ...--
# D	         -..	  M	          --	   V	      ...-	   4	       ....-
# E	         .	      N	          -.	   W	      .--	   5	       .....
# F	         ..-.	  O	          ---	   X	      -..-	   6	       -....
# G	         --.	  P	          .--.	   Y	      -.--	   7	       --...
# H	         ....	  Q	          --.-	   Z	      --..	   8	       ---..
# I	         ..	      R	          .-.	   0	      -----	   9	       ----.

# Формат входных данных
# На вход программе подается одна строка – текстовое сообщение.

# Формат выходных данных
# Программа должна вывести закодированное с помощью кода Морзе сообщение, оставляя пробел
# между каждым закодированным символом (последовательностью тире и точек).

# Примечание. Ваша программа должна игнорировать любые символы, не перечисленные в таблице.

letters = [c for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789']
morse = ['.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---', '-.-', '.-..',
        '--', '-.', '---', '.--.', '--.-', '.-.', '...', '-', '..-', '...-', '.--', '-..-',
        '-.--', '--..', '-----', '.----', '..---', '...--', '....-', '.....', '-....', '--...',
        '---..', '----.']

morze_dict = dict(zip(letters, morse))

print(*[morze_dict[char.upper()] for char in input() if char not in "' ',.+=?!-"])